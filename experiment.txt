let nav = 0;
let clicked = null;
let events = localStorage.getItem('events') ? JSON.parse(localStorage.getItem('events')) : [];
var clickeddate;
const calendar = document.getElementById('calendar');
const newEventModal = document.getElementById('newEventModal');
const deleteEventModal = document.getElementById('deleteEventModal');
const backDrop = document.getElementById('modalBackDrop');
const eventTitleInput = document.getElementById('eventTitleInput');
const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];


function loadEvents(){    //loadComments
  //Ajax here
  let xhttp = new XMLHttpRequest()
  xhttp.onreadystatechange = function() {
    if(this.readyState == 4 && this.status == 200){
      //later aligator
      let result = this.responseText
      let results = JSON.parse(result)
      results.forEach(comment => {

        // axios
        
      });
    }
  }
xhttp.open("GET","/home",true)  //open a 'get' request , its async
xhttp.send()
  
}


function openModal(date) {
  clicked = date;
  clickeddate = date;


  const eventForDay = events.find(e => e.date === clicked);
  if (eventForDay) {
    var dateToEnter = date;
    localStorage.setItem("dateToEnter",dateToEnter);
    document.getElementById('eventText').innerText = eventForDay.title;
    deleteEventModal.style.display = 'block';
  } else {
    newEventModal.style.display = 'block';
  }

  backDrop.style.display = 'block';
}

function load() {
  const dt = new Date();

  if (nav !== 0) {
    dt.setMonth(new Date().getMonth() + nav);
  }

  const day = dt.getDate();
  const month = dt.getMonth();
  const year = dt.getFullYear();

  const firstDayOfMonth = new Date(year, month, 1);
  const daysInMonth = new Date(year, month + 1, 0).getDate();
  
  const dateString = firstDayOfMonth.toLocaleDateString('en-us', {
    weekday: 'long',
    year: 'numeric',
    month: 'numeric',
    day: 'numeric',
  });
  const paddingDays = weekdays.indexOf(dateString.split(', ')[0]);
  
  document.getElementById('monthDisplay').innerText = 
    `${dt.toLocaleDateString('en-us', { month: 'long' })}`;

  document.getElementById('yearDisplay').innerText = 
    `${year}`;



  calendar.innerHTML = '';

  for(let i = 1; i <= paddingDays + daysInMonth; i++) {
    const daySquare = document.createElement('div');
    daySquare.classList.add('day');

    const dayString = `${year}-${month + 1}-${i - paddingDays}`;
    01/01/2021
    // console.log(dayString);

    if (i > paddingDays) {
      daySquare.innerText = i - paddingDays;
      const eventForDay = events.find(e => e.date === dayString);

      if (i - paddingDays === day && nav === 0) {
        daySquare.id = 'currentDay';
      }

      if (eventForDay) {
        const eventDiv = document.createElement('div');
        eventDiv.classList.add('event');
        eventDiv.innerText = eventForDay.title;
        daySquare.appendChild(eventDiv);
      }

      daySquare.addEventListener('click', () => openModal(dayString));
    } else {
      daySquare.classList.add('padding');
    }

    calendar.appendChild(daySquare);    
  }
}

function closeModal() {
  eventTitleInput.classList.remove('error');
  newEventModal.style.display = 'none';
  deleteEventModal.style.display = 'none';
  backDrop.style.display = 'none';
  eventTitleInput.value = '';
  clicked = null;
  load();
} 

function saveEvent() {
  if (eventTitleInput.value) {
    eventTitleInput.classList.remove('error');

    events.push({
      date: clicked,
      title: eventTitleInput.value,
    });

    localStorage.setItem('events', JSON.stringify(events));
    closeModal();
  } else {
    eventTitleInput.classList.add('error');
  }
}

function deleteEvent() {
  events = events.filter(e => e.date !== clicked);
  localStorage.setItem('events', JSON.stringify(events));
  closeModal();
}

function initButtons() {
  document.getElementById('nextButton').addEventListener('click', () => {
    nav++;
    load();
  });

  document.getElementById('backButton').addEventListener('click', () => {
    nav--;
    load();
  });

  document.getElementById('saveButton').addEventListener('click', saveEvent);
  document.getElementById('cancelButton').addEventListener('click', closeModal);
  document.getElementById('deleteButton').addEventListener('click', deleteEvent);
  document.getElementById('closeButton').addEventListener('click', closeModal);
}
function thisfunc(){
  alert("asdasdasd")
}
function insertComment(){
  let xhttp = new XMLHttpRequest()
  xhttp.onreadystatechange = function(){
    if(this.readyState == 4 && this.status == 200){
    //TODO : cpde response display the new events in the calender
    let result = this.responseText
    console.log(result);
      
    }

  }
  let addClass = document.getElementsByClassName("Test") 
  let description = addClass[0].value
  let name = addClass[1].value
  let date = clickeddate;

  xhttp.open("POST", "/insert",true)
  xhttp.setRequestHeader("Content-Type","application/json")
  xhttp.send('{"description":"'+description+'","name":"'+name+'","Date":"'+date+'"}')
}

initButtons();
load();

//check weather or not of there is an event for that day
//if there is a eevnt then - create a div, add the text for the event and put it inside daysquare m






//for the delete operation in the sql
else if(req.method == "POST" && req.url == "/delete"){
    res.statusCode = 200
    res.setHeader('Content-Type', 'text/plain')

    let conn2 = con.getConnection()
    conn2.query("DELETE FROM pepcalender.events WHERE date = (clicked) VALUES(?)",[clicked],function(error, results, fields){
        if(error) throw error;
        console.log("Success!");
    });
}

//!@#&^%$
let nav = 0;
let results="";
let clicked = null;
let events = localStorage.getItem('events') ? JSON.parse(localStorage.getItem('events')) : [];
var clickeddate;
const calendar = document.getElementById('calendar');
const newEventModal = document.getElementById('newEventModal');
const deleteEventModal = document.getElementById('deleteEventModal');
const backDrop = document.getElementById('modalBackDrop');
const eventTitleInput = document.getElementById('eventTitleInput');
const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

let xhttp = new XMLHttpRequest()
  xhttp.onreadystatechange = function() {
    if(this.readyState == 4 && this.status == 200){
      //later aligator
      let result = this.responseText
      results = JSON.parse(result)
      console.log(results);
    }
  }
function loadEvents(){    //loadComments
  //Ajax here
  let xhttp = new XMLHttpRequest()
  xhttp.onreadystatechange = function() {
    if(this.readyState == 4 && this.status == 200){
      //later aligator
      let result = this.responseText
      results = JSON.parse(result)
      load(results);  //most importatn
      results.forEach(comment => {
       

        // axios
        
      });
    }
  }
xhttp.open("GET","/home",true)  //open a 'get' request , its async
xhttp.send()
  
}



function openModal(date) {
  clicked = date;
  clickeddate = date;


  const eventForDay = results.find(e => e.date === clicked);
  if (eventForDay) {
    var dateToEnter = date;
    // localStorage.setItem("dateToEnter",dateToEnter); // $$$$$$
    document.getElementById('eventText').innerText = eventForDay.Description;
    deleteEventModal.style.display = 'block';
  } else {
    newEventModal.style.display = 'block';
  }

  backDrop.style.display = 'block';
}

function load(results) {

    // document.getElementById("calender").innerText=""

  console.log(results);
  const dt = new Date();

  if (nav !== 0) {
    dt.setMonth(new Date().getMonth() + nav);
  }

  const day = dt.getDate();
  const month = dt.getMonth();
  const year = dt.getFullYear();

  const firstDayOfMonth = new Date(year, month, 1);
  const daysInMonth = new Date(year, month + 1, 0).getDate();
  
  const dateString = firstDayOfMonth.toLocaleDateString('en-us', {
    weekday: 'long',
    year: 'numeric',
    month: 'numeric',
    day: 'numeric',
  });
  const paddingDays = weekdays.indexOf(dateString.split(', ')[0]);
  
  document.getElementById('monthDisplay').innerText = 
    `${dt.toLocaleDateString('en-us', { month: 'long' })}`;

  document.getElementById('yearDisplay').innerText = 
    `${year}`;



  calendar.innerHTML = '';

  for(let i = 1; i <= paddingDays + daysInMonth; i++) {
    const daySquare = document.createElement('div');
    daySquare.classList.add('day');

    const dayString = `${year}-${month + 1}-${i - paddingDays}`;
    // 01/01/2021
    // console.log(dayString);

    if (i > paddingDays) {
      daySquare.innerText = i - paddingDays;
      const eventForDay = results.find(e => e.date === dayString);
      console.log(eventForDay);
      // console.log("Milestone"+eventForDay.date);

      if (i - paddingDays === day && nav === 0) {
        daySquare.id = 'currentDay';
      }

      if (eventForDay) {    //evntForDay is an object
        console.log("cehcking");
        // results.forEach(comment => {
          // console.log(comment.date+".............."+dayString);
          // if(comment.date == dayString){

            const eventDiv = document.createElement('div');
        eventDiv.classList.add('event');
        eventDiv.innerText = eventForDay.Description;
        daySquare.appendChild(eventDiv);
          }
        
        
      

      daySquare.addEventListener('click', () => openModal(dayString));
    } else {
      daySquare.classList.add('padding');
    }

    calendar.appendChild(daySquare);    
  }
  
}

function closeModal() {
  eventTitleInput.classList.remove('error');
  newEventModal.style.display = 'none';
  deleteEventModal.style.display = 'none';
  backDrop.style.display = 'none';
  eventTitleInput.value = '';
  clicked = null;
  load(results);
} 

function saveEvent() {
  if (eventTitleInput.value) {
    eventTitleInput.classList.remove('error');

    events.push({
      date: clicked,
      title: eventTitleInput.value,
    });

    localStorage.setItem('events', JSON.stringify(events));
    closeModal();
  } else {
    eventTitleInput.classList.add('error');
  }
}

// function deleteEvent() {
//   events = results.filter(e => e.date !== clicked);   //deleted the event but have to to update the sql i think
//   console.log("😍"+clicked); //clicked stores the date of the event clicked so ..
//   localStorage.setItem('events', JSON.stringify(events));
//   closeModal();
// }

function initButtons() {
  document.getElementById('nextButton').addEventListener('click', () => {
    nav++;
    load(results);
  });

  document.getElementById('backButton').addEventListener('click', () => {
    nav--;
    load(results);
  });

  document.getElementById('saveButton').addEventListener('click', saveEvent);
  document.getElementById('cancelButton').addEventListener('click', closeModal);
  document.getElementById('deleteButton').addEventListener('click', deleteComment);
  document.getElementById('closeButton').addEventListener('click', closeModal);
}
function thisfunc(){
  alert("asdasdasd")
}
function insertComment(){
  let xhttp = new XMLHttpRequest()
  xhttp.onreadystatechange = function(){
    if(this.readyState == 4 && this.status == 200){
    //TODO : cpde esponse display the new events in the calender
    let result = this.responseText
    console.log(result); 
      
    }

  }
  let addClass = document.getElementsByClassName("Test") 
  let description = addClass[0].value
  let name = addClass[1].value
  let date = clickeddate;

  xhttp.open("POST", "/insert",true)
  xhttp.setRequestHeader("Content-Type","application/json")
  xhttp.send('{"description":"'+description+'","name":"'+name+'","Date":"'+date+'"}')
  // load(results)
  loadEvents()
}

function deleteComment() {
  let xhttp = new XMLHttpRequest()
  xhttp.onreadystatechange = function(){
    if(this.readyState == 4 && this.status == 200){}}
  let temp = clicked
  xhttp.open("DELETE","/delete",true)
  xhttp.setRequestHeader("Content-Type","application/json")
  console.log(temp);
  xhttp.send('{"clicked":"'+temp+'"}')
  closeModal();
  // load(results)
  loadEvents()
}

function addEve(){
  let parent = document.getElementById("newEventModal")
  newEventModal.style.display = 'block'
  backDrop.style.display = 'block';
  let additional = document.createElement("input")
  additional.type = "date"
  additional.className="Test"
  additional.id="plusid"
  parent.appendChild(additional)

  let plusdate = document.getElementById("plusid").value

  let xhttp = new XMLHttpRequest()
  xhttp.onreadystatechange = function(){
    if(this.readyState == 4 && this.status == 200){
    //TODO : cpde esponse display the new events in the calender
    let result = this.responseText
    console.log(result); 
      
    }

  }
  let addClass = document.getElementsByClassName("Test") 
  let description = addClass[0].value
  let name = addClass[1].value
  let date = plusdate;
  console.log("😪"+date);

  xhttp.open("POST", "/insert",true)
  xhttp.setRequestHeader("Content-Type","application/json")
  xhttp.send('{"description":"'+description+'","name":"'+name+'","Date":"'+date+'"}')
  // load(results)
  loadEvents()




}

initButtons();
// load();

//check weather or not of there is an event for that day
//if there is a eevnt then - create a div, add the text for the event and put it inside daysquare m